<?php
//*****************************************************************************
//*****************************************************************************
/**
 * GPIO Class
 *
 * @package         Cclark61\RPi
 * @author          Christian J. Clark
 * @copyright       Christian J. Clark
 * @link            https://github.com/cclark61/php-raspberry-pi
 **/
//*****************************************************************************
//*****************************************************************************

namespace Cclark61\RPi;

class GPIO
{
    //=========================================================================
    // Class Members
    //=========================================================================

    //=========================================================================
    //=========================================================================
    // Set Inputs Mode
    //=========================================================================
    //=========================================================================
    public static function SetInputMode($input, $mode, Array $args=[])
    {
        //---------------------------------------------------------------------
        // Defaults / Extract Args
        //---------------------------------------------------------------------
        $verbose = false;
        extract($args);

        //---------------------------------------------------------------------
        // Set Pin Mode
        //---------------------------------------------------------------------
        system("gpio mode {$input} {$mode}");
        if ($verbose) {
            print "\n[i] Pin #{$input} mode -> '{$mode}'.";
        }
    }

    //=========================================================================
    //=========================================================================
    // Set Inputs Mode
    //=========================================================================
    //=========================================================================
    public static function SetInputsMode(Array $inputs, $mode, Array $args=[])
    {
        //---------------------------------------------------------------------
        // Defaults / Extract Args
        //---------------------------------------------------------------------
        $verbose = false;
        extract($args);

        //---------------------------------------------------------------------
        // Set Pin Modes
        //---------------------------------------------------------------------
        if ($verbose) {
            print "\n[i] Setting pin modes...";
        }
        foreach ($inputs as $input) {
            static::SetInputMode($input, $mode, $args);
        }
        if ($verbose) {
            print "\nDone.\n";
        }
    }

    //=========================================================================
    //=========================================================================
    // Turn Off All GPIO Inputs
    //=========================================================================
    //=========================================================================
    public static function TurnOffAll(Array $args=[])
    {
        //---------------------------------------------------------------------
        // Defaults / Extract Args
        //---------------------------------------------------------------------
        $inputs = [7, 0, 2, 3, 21, 22, 23, 25, 1, 4, 5, 6, 26, 27];
        $verbose = false;
        extract($args);

        //---------------------------------------------------------------------
        // Turn Off Inputs
        //---------------------------------------------------------------------
        if ($verbose) {
            print "\n[i] Turning off inputs...";
        }
        foreach ($inputs as $input) {
            if ($verbose) {
                print "\nPin {$input}...";
            }
            static::PinWrite($input, 0, $args);
            if ($verbose) {
                print "Off.";
            }
        }
        if ($verbose) {
            print "\nDone.\n";
        }
    }

    //=========================================================================
    //=========================================================================
    // Cycle GPIO Pin
    //=========================================================================
    //=========================================================================
    public static function CyclePin($pin, $val, Array $args=[])
    {
        if ($val != 0 && $val != 1) {
            static::ExitWithError('Invalid pin value. Valid values are 0 or 1.');
        }
        $val2 = ($val == 1) ? (0) : (1);
        $sleep = 0.01;
        extract($args);
        static::PinWrite($pin, $val, $args);
        sleep($sleep);
        static::PinWrite($pin, $val2, $args);
    }

    //=========================================================================
    //=========================================================================
    // Pin Write
    //=========================================================================
    //=========================================================================
    public static function PinWrite($pin, $val, Array $args=[])
    {
        if ($val != 0 && $val != 1) {
            static::ExitWithError('Invalid pin value. Valid values are 0 or 1.');
        }
        system("gpio write {$pin} {$val}");
        //\wiringpi::digitalWrite($pin, $val);
        return true;
    }

}
